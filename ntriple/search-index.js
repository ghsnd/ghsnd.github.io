var searchIndex = {};
searchIndex["ntriple"] = {"doc":"ntriple, a library to parse N-Triples on a per string basis.","items":[[3,"Triple","ntriple","Represents an RDF statement in the form of a triple.",null,null],[12,"subject","","The subject part. This can be an IRI or a blank node.",0,null],[12,"predicate","","The predicate part. This is an IRI.",0,null],[12,"object","","The object part. This can be an IRI, a blank node or a literal.",0,null],[3,"Literal","","Represents an RDF literal.",null,null],[12,"data","","The literal part (e.g. `This is a literal`).",1,null],[12,"data_type","","The type or language of the literal.",1,null],[4,"Subject","","Represents the subject part of a triple.",null,null],[13,"IriRef","","The unescaped lexical form of the IRI.",2,null],[13,"BNode","","",2,null],[4,"Predicate","","Represents the predicate part of a triple.",null,null],[13,"IriRef","","The unescaped lexical form of the IRI.",3,null],[4,"Object","","Represents the object part of a triple.",null,null],[13,"IriRef","","The unescaped lexical form of the IRI.",4,null],[13,"BNode","","",4,null],[13,"Lit","","The unescaped lexial form of the literal.",4,null],[4,"TypeLang","","Represents either a type or a language.",null,null],[13,"Lang","","a language tag (e.g. `nl-be`).",5,null],[13,"Type","","a type reference (e.g. `https://www.w3.org/2001/XMLSchema#float`).",5,null],[0,"parser","","Generated code.",null,null],[3,"ParseError","ntriple::parser","",null,null],[12,"line","","",6,null],[12,"column","","",6,null],[12,"offset","","",6,null],[12,"expected","","",6,null],[5,"triple_line","","",null,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[5,"triple","","",null,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[5,"subject","","",null,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[5,"predicate","","",null,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[5,"object","","",null,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[5,"literal","","",null,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[5,"LANGTAG","","",null,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[5,"IRIREF","","",null,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[5,"STRING_LITERAL_QUOTE","","",null,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[5,"BLANK_NODE_LABEL","","",null,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[5,"UCHAR","","",null,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[6,"ParseResult","","",null,null],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"parseerror"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",6,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","ntriple","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Triple"],[3,"Literal"],[4,"Subject"],[4,"Predicate"],[4,"Object"],[4,"TypeLang"],[3,"ParseError"]]};
initSearch(searchIndex);
